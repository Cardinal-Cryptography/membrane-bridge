#+TITLE: MOST relayer: High-Level Design Document
#+AUTHOR: F. Bielejec
#+EMAIL: fiip.bielejec@cardinals.cc
#+TEXINFO_PRINTED_TITLE: MOST relayer: High-Level Design Document
#+SUBTITLE: version {{{version}}}, {{{updated}}}
#+OPTIONS: ':t toc:t author:t email:t
#+LANGUAGE: en
#+STARTUP: overview

* DONE Introduction

This document describes conceptual design of a relayer process, designed to listen to, sign and relay cross-chain transfer requests between Ethereum and AlephZero.

System architecture can be divided into components responsible for listening to and handling requests coming from the AlephZero chain and into Ethereum and the ones responsible for handling cross chain transfers in the opposite direction.

System is composed of various coupled components which comunicate with channels (akin to message passing, albeit much simpler).

Becasue of the vast differences in how these two chains operate and finalize blocks there are some differences in how these two sides operate.

* Components for handling AlephZero -> Ethereum transfer requests

#+BEGIN_SRC plantuml :file azero_eth_components.png
database "Cache" {
  [RedisManager] as redis
}

package "AlephZero events" {
  [Listener] as a0_listener
  [Handler 1] as a0_handler_1
  [...] 
  [Handler n] as a0_handler_n    
}

package "Message queues" {
  [Next block number] as a0_block_num
  [Block seal] as a0_block_seal
}

cloud {
  [Ethereum] as eth
  [AlephZero] as a0
}

a0_listener <.up. a0  : events subscription
a0_listener <.up. a0_block_num :  next block subscrption
a0_listener .up.> a0_block_seal : publish last processed block
redis .down.> a0_block_num : publish next block 
redis <.up. a0_block_seal : last processed block subscription

a0_listener <.down.> a0_handler_1  
a0_listener <.down.> a0_handler_n 

a0_handler_1 .down.> eth : tx
a0_handler_n .down.> eth : tx
#+END_SRC
#+RESULTS:
[[file:azero_eth_components.png][azero_eth_components.png]]

- Listener: 
