---
name: Bridgenet - deploy contracts

on:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: "${{ github.ref }}-${{ github.workflow }}"
  cancel-in-progress: false

jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  #test-azero-contracts:
  #  needs: [check-vars-and-secrets]
  #  uses: ./.github/workflows/test-azero-contracts.yml

  #test-eth-contracts:
  #  needs: [check-vars-and-secrets]
  #  uses: ./.github/workflows/test-eth-contracts.yml

  deploy-contracts:
    name: Deploy and setup contracts
    runs-on: self-hosted
    needs: [test-eth-contracts, test-azero-contracts]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node
        uses: asdf-vm/actions/install@v2

      - name: Deploy eth contracts
        shell: bash
        run: make deploy-eth NETWORK=bridgenet

      - name: Deploy and setup azero contracts
        shell: bash
        run: AZERO_ENV=bridgenet make deploy-azero-docker

      - name: Setup eth contracts
        shell: bash
        run: make setup-eth NETWORK=bridgenet

      - uses: actions/upload-artifact@v4
        with:
          name: eth-deployed-contracts
          if-no-files-found: error
          retention-days: 1
          path: |
            eth/artifacts
            eth/addresses.json

      - uses: actions/upload-artifact@v4
        with:
          name: azero-deployed-contracts
          if-no-files-found: error
          retention-days: 1
          path: |
            azero/artifacts
            azero/addresses.json

  upload-contract-artifacts:
    name: Upload contract artifacts to S3
    runs-on: self-hosted
    needs: [deploy-contracts]
    strategy:
      matrix:
        include:
          - from: eth/artifacts/contracts/Governance.sol/Governance.json
            to: eth_governance
          - from: eth/artifacts/contracts/Most.sol/Most.json
            to: eth_most
          - from: eth/artifacts/contracts/Token.sol/Token.json
            to: eth_token
          - from: eth/artifacts/contracts/WETH9.sol/WETH9.json
            to: eth_weth9
          - from: azero/artifacts/most.json
            to: azero_most
          - from: azero/artifacts/most.contract
            to: azero_most
          - from: azero/artifacts/governance.json
            to: azero_governance
          - from: azero/artifacts/governance.contract
            to: azero_governance
          - from: azero/artifacts/token.json
            to: azero_token
          - from: azero/artifacts/token.contract
            to: azero_token
          - from: azero/advisory/advisory.json
            to: azero_advisory
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: azero-deployed-contracts
          path: azero

      - uses: actions/download-artifact@v4
        with:
          name: eth-deployed-contracts
          path: eth

      - name: Store artifact in S3 bucket
        uses: Cardinal-Cryptography/github-actions/store-contract-artifact@v6
        with:
          aws-access-key-id: ${{ secrets.CONTRACTS_MOST_ARTIFACTS_RW_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CONTRACTS_MOST_ARTIFACTS_RW_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.CONTRACTS_S3BUCKET_REGION }}
          s3-bucket: ${{ secrets.CONTRACTS_S3BUCKET_NAME }}
          project: most
          version: ${{ github.sha }}
          contract: ${{ matrix.to }}
          src-artifact: ${{ matrix.from }}
          if-exist: overwrite

  upload-contract-addresses:
    name: Upload contract addresses to S3
    runs-on: self-hosted
    needs: [deploy-contracts]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: azero-deployed-contracts
          path: azero

      - uses: actions/download-artifact@v4
        with:
          name: eth-deployed-contracts
          path: eth

      - name: Prepare contract_spec.json
        shell: bash
        run: make contract_spec.json

      - name: Store addresses in S3 bucket
        uses: Cardinal-Cryptography/github-actions/store-contract-addresses@v6
        with:
          aws-access-key-id: ${{ secrets.CONTRACTS_MOST_ADDRESSES_BRIDGENET_DEV_RW_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CONTRACTS_MOST_ADDRESSES_BRIDGENET_DEV_RW_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.CONTRACTS_S3BUCKET_REGION }}
          s3-bucket: ${{ secrets.CONTRACTS_S3BUCKET_NAME }}
          project: most
          chain-environment: bridgenet
          frontend-environment: dev
          src-addresses: contract_spec.json
          if-exist: overwrite
